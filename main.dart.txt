import 'package:flutter/material.dart';

void main() => runApp(const MyApp());

class MyApp extends StatelessWidget {
  const MyApp({super.key});
  static const String _title = 'Flutter Stateful Clicker Counter';

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: _title,
      theme: ThemeData(
        primarySwatch: Colors.pink,
      ),
      home: const MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({super.key});

  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  String text = '';
  String? error;
  String? result;

  double _conversionRate = 4.9;

  void _convertEuroToRon() {
    setState(() {
      final double? amountInEuro = double.tryParse(text);
      if (amountInEuro == null) {
        error = 'You need to enter a valid number';
        result = null;
      } else {
        error = null;

        double amountInRon = amountInEuro * _conversionRate;

        result = 'Amount in RON: $amountInRon';
      }
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('EURO to RON converter'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Image.network(
              'https://discover.rbcroyalbank.com/wp-content/uploads/Untitled-design-2023-07-31T120240.836.jpg',
              width: 300.0,
              height: 300.0,
            ),
            TextField(
              decoration: InputDecoration(
                hintText: 'Please enter the amount of money',
                errorText: error,
              ),
              onChanged: (String value) {
                setState(() {
                  text = value;
                  final double? number = double.tryParse(value);
                  if (number == null) {
                    error = 'You need to enter a valid number';
                  } else {
                    error = null;
                  }
                });
              },
            ),
            const SizedBox(height: 16.0),
            ElevatedButton(
              onPressed: _convertEuroToRon,
              child: const Text('Convert to RON'),
            ),
            if (result != null)
              Padding(
                padding: const EdgeInsets.all(16.0),
                child: Text(result!),
              ),
          ],
        ),
      ),
    );
  }
}
